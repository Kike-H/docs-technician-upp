"use strict";(self.webpackChunkdocs_technician_upp=self.webpackChunkdocs_technician_upp||[]).push([[924],{9613:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(9496);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),u=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(a),m=n,k=p["".concat(i,".").concat(m)]||p[m]||d[m]||s;return a?r.createElement(k,l(l({ref:t},c),{},{components:a})):r.createElement(k,l({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=p;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var u=2;u<s;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},7582:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var r=a(4250),n=(a(9496),a(9613));const s={sidebar_position:1},l="Estructura de Ficheros",o={unversionedId:"project-structure/files-structure",id:"project-structure/files-structure",title:"Estructura de Ficheros",description:"Estructurando nuestro proyecto ( Diagram Tree )",source:"@site/backend/project-structure/1-files-structure.md",sourceDirName:"project-structure",slug:"/project-structure/files-structure",permalink:"/docs-technician-upp/docs/project-structure/files-structure",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/backend/project-structure/1-files-structure.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Estructura de proyecto",permalink:"/docs-technician-upp/docs/category/estructura-de-proyecto"},next:{title:"Base de Datos",permalink:"/docs-technician-upp/docs/project-structure/database"}},i={},u=[{value:"exc.sh",id:"excsh",level:2},{value:"Dev",id:"dev",level:3},{value:"Test",id:"test",level:3},{value:"Delete",id:"delete",level:3},{value:"Files",id:"files",level:2},{value:"Requirements.txt",id:"requirementstxt",level:2},{value:"src",id:"src",level:2},{value:"Config",id:"config",level:3},{value:"Middlewares",id:"middlewares",level:3},{value:"Models",id:"models",level:3},{value:"Routes",id:"routes",level:3},{value:"Schemas",id:"schemas",level:3},{value:"Utilities",id:"utilities",level:3},{value:"Test",id:"test-1",level:2},{value:"Test Files",id:"test-files",level:3}],c={toc:u};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"estructura-de-ficheros"},"Estructura de Ficheros"),(0,n.kt)("p",null,"Estructurando nuestro proyecto (",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"}," Diagram Tree ")),")"),(0,n.kt)("p",null,"El proyecto en la parte del lado del backend sigue la estructura de la arquitectura ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"}," API Restful ")),", bas\xe1ndonos en las filosof\xedas principales de ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"}," clean code ")),", as\xed como de ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"}," DRY "))," (Don't repeat yourself)"),(0,n.kt)("p",null,"Aqu\xed abajo ver\xe1 un diagrama de \xe1rbol de la estructura del proyecto:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 exc.sh\n\u251c\u2500\u2500 files\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 src\n\u2502\xa0\xa0 \u251c\u2500\u2500 app.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 config\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 database.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 middlewares\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 middlewares.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 models\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 models.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 routes\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 routes.py\n\u2502\xa0\xa0 \u251c\u2500\u2500 schemas\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 schemas.py\n\u2502\xa0\xa0 \u2514\u2500\u2500 utilities\n\u2502\xa0\xa0     \u2514\u2500\u2500 files.py\n\u2514\u2500\u2500 test\n    \u251c\u2500\u2500 test_files\n    \u2502\xa0\xa0 \u251c\u2500\u2500 test.pdf\n    \u2502\xa0\xa0 \u2514\u2500\u2500 test2.pdf\n    \u2514\u2500\u2500 test.py\n")),(0,n.kt)("h2",{id:"excsh"},"exc.sh"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Si asi lo desea puede darle un alias al ejecutable, para poder ejecutarlo de una mejor manera.")),(0,n.kt)("p",null,"Este es el ejecutable creado, para ejecutar, la api, limpiar las tablas y ejecutar los test creados de la API."),(0,n.kt)("h3",{id:"dev"},"Dev"),(0,n.kt)("p",null,"Este comando ejecuta el servidor en modo de desarrollo en ",(0,n.kt)("a",{parentName:"p",href:"http://localhost:8000"},"http://localhost:8000/")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"./exc.sh dev\n")),(0,n.kt)("h3",{id:"test"},"Test"),(0,n.kt)("p",null,"Este comando ejecuta todos los archivos test, que se encuentra en el directorio de: ",(0,n.kt)("inlineCode",{parentName:"p"},"./test/")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"./exc.sh test\n")),(0,n.kt)("h3",{id:"delete"},"Delete"),(0,n.kt)("p",null,"Este comando limpia las tablas de la base de datos local "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"./exc.sh delete \n")),(0,n.kt)("h2",{id:"files"},"Files"),(0,n.kt)("p",null,"Este directorio es donde se almacenan todos los archivos subidos al backend, tanto PDF como CSV  o EXCEL."),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Si nota que este directorio no se encuentra es porque se crea autom\xe1ticamente, una vez que ejecuta la ruta para crear archivos, este directorio est\xe1 ignorado en el  ",(0,n.kt)("inlineCode",{parentName:"p"},".gitignore"))),(0,n.kt)("h2",{id:"requirementstxt"},"Requirements.txt"),(0,n.kt)("p",null,"Este es un archivo, donde se registran los paquetes utilizados, para el proyecto as\xed como su versi\xf3n, para que de esta forma se puedan instalar en una nueva m\xe1quina."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -r requirements.txt\n")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"Si usted a\xf1ade, actualiza o elimina un paquete aseg\xfarese de actualizar el ",(0,n.kt)("inlineCode",{parentName:"p"},"requirements.txt")," con el siguiente comando:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"pip freeze < requirements.txt\n"))),(0,n.kt)("h2",{id:"src"},"src"),(0,n.kt)("p",null,"Aqu\xed se almacena todo el c\xf3digo fuente del proyecto."),(0,n.kt)("h3",{id:"config"},"Config"),(0,n.kt)("p",null,"En este directorio se almacenan las configuraciones del proyecto, por ejemplo las conexiones a la base de datos."),(0,n.kt)("h3",{id:"middlewares"},"Middlewares"),(0,n.kt)("p",null,"Aqu\xed se guardan los middlewares de la API."),(0,n.kt)("h3",{id:"models"},"Models"),(0,n.kt)("p",null,"Aqu\xed se guardan los modelos de la API."),(0,n.kt)("h3",{id:"routes"},"Routes"),(0,n.kt)("p",null,"Aqu\xed se guardan las rutas de la API."),(0,n.kt)("h3",{id:"schemas"},"Schemas"),(0,n.kt)("p",null,"Aqu\xed se guardan las schemas de la API."),(0,n.kt)("h3",{id:"utilities"},"Utilities"),(0,n.kt)("p",null,"Aqu\xed se guardan los archivos auxiliares que ayudan al buen funcionamiento de la API."),(0,n.kt)("h2",{id:"test-1"},"Test"),(0,n.kt)("p",null,"Aqu\xed se guardan los test de la API."),(0,n.kt)("h3",{id:"test-files"},"Test Files"),(0,n.kt)("p",null,"Aqu\xed en ",(0,n.kt)("inlineCode",{parentName:"p"},"./test/test_files")," se guardan los archivos de prueba utilizados en las pruebas de la API."))}d.isMDXComponent=!0}}]);