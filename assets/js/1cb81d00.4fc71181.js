"use strict";(self.webpackChunkdocs_technician_upp=self.webpackChunkdocs_technician_upp||[]).push([[485],{9613:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>m});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},i=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(u,".").concat(m)]||d[m]||l[m]||o;return r?n.createElement(f,s(s({ref:t},i),{},{components:r})):n.createElement(f,s({ref:t},i))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7004:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(4250),a=(r(9496),r(9613));const o={sidebar_position:6},s="Routes",p={unversionedId:"project-structure/routes",id:"project-structure/routes",title:"Routes",description:"Rutas y la importancia de un  Restful API",source:"@site/backend/project-structure/6-routes.md",sourceDirName:"project-structure",slug:"/project-structure/routes",permalink:"/docs-technician-upp/docs/project-structure/routes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/backend/project-structure/6-routes.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"API Key",permalink:"/docs-technician-upp/docs/project-structure/apikey"},next:{title:"Extra",permalink:"/docs-technician-upp/docs/project-structure/extra"}},u={},c=[{value:"C\xf3digo",id:"c\xf3digo",level:2},{value:"\xbfQue es un decorador?",id:"que-es-un-decorador",level:2},{value:"Decoradores en rutas",id:"decoradores-en-rutas",level:3},{value:"Enrutador",id:"enrutador",level:2}],i={toc:c};function l(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"routes"},"Routes"),(0,a.kt)("p",null,"Rutas y la importancia de un ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"}," Restful API "))),(0,a.kt)("p",null,"Porque decimos que nuestra API es una restful API, bien porque esta cumnple con los conocidos verbos de una API Restful, los cuales son ",(0,a.kt)("inlineCode",{parentName:"p"},"GET"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"PUT")," y ",(0,a.kt)("inlineCode",{parentName:"p"},"DELETE")),(0,a.kt)("p",null,"En el c\xf3digo de a continuaci\xf3n se crean las rutas con los 4 verbos para ",(0,a.kt)("inlineCode",{parentName:"p"},"Cap\xedtulo")),(0,a.kt)("h2",{id:"c\xf3digo"},"C\xf3digo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from fastapi import APIRouter, status\nfrom src.models.chapter import ChapterBase, ChapterIn, ChapterOut\nfrom src.schemas.schemas import chapter\nfrom src.config.database import conn\n\nchapter_routes = APIRouter()\n\n# * ---- BASIC CRUD\n\n\n@chapter_routes.post('/', response_model=ChapterBase, tags=['Capitulo'], status_code=status.HTTP_201_CREATED)\ndef anadir_nueva(chapter_v: ChapterIn):\n    return ChapterBase(idCapitulo=conn.execute(chapter.insert().values(chapter_v.dict())).lastrowid)\n\n\n@chapter_routes.get('/', response_model=ChapterOut, tags=['Capitulo'])\ndef obtener_todas():\n    return ChapterOut(values=conn.execute(chapter.select()).all())\n\n\n@chapter_routes.put('/', response_model=ChapterIn, tags=['Capitulo'])\ndef actualizar(chapter_v: ChapterIn):\n    return conn.execute(chapter.update().values(chapter_v.dict()).where(chapter.c.idCapitulo == chapter_v.idCapitulo)).last_updated_params()\n\n\n@chapter_routes.get('/{id}', response_model=ChapterIn, tags=['Capitulo'])\ndef obtener_una(id: str):\n    return conn.execute(chapter.select().where(\n\n\n@chapter_routes.delete('/{id}', tags=['Capitulo'], status_code=status.HTTP_204_NO_CONTENT)\ndef eliminar(id: str):\n    conn.execute(chapter.delete().where(\n\n# * ---- BASIC CRUD\n")),(0,a.kt)("h2",{id:"que-es-un-decorador"},"\xbfQue es un decorador?"),(0,a.kt)("p",null,"Bien en palabras sencillas los decoradores en python, son funciones que envuelven a otra, esto con la intenci\xf3n de de ejecutar funciones que suelen repetirse dentro de otras, esta acci\xf3n en python lo hacemos en base a la siguiente estructura:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\ndef funcion_envolvente(name: str, callback):\n   print("Hello", name)\n   callback()\n\n\n@funcion_envolvente("Kike")\ndef funcion():\n   print("Hello World!")\n\n\n')),(0,a.kt)("p",null," Danos una salida como la siguiente:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Hello Kike \nHello World!\n")),(0,a.kt)("p",null,"Por ende usamos los decoradores del framework ",(0,a.kt)("inlineCode",{parentName:"p"},"FastAPI")," para que este se encarga de recibir todos los ",(0,a.kt)("inlineCode",{parentName:"p"},"response")," y ",(0,a.kt)("inlineCode",{parentName:"p"},"request")," entre otros y nosotros nos enfoquemos solo de usar estos m\xe9todos para aplicar la l\xf3gica de nuestras rutas."),(0,a.kt)("h3",{id:"decoradores-en-rutas"},"Decoradores en rutas"),(0,a.kt)("p",null,"Ahora como vemos estos decoradores aceptan varios parametros, primero encontramos lo que es el path de la ruta que viene en formato string, un ",(0,a.kt)("inlineCode",{parentName:"p"},"response_model")," que es el modelo con el que la ruta responder\xe1 en caso de \xe9xito y de la misma manera con el ",(0,a.kt)("inlineCode",{parentName:"p"},"status_code"),", tambi\xe9n tenemos lo que son los ",(0,a.kt)("inlineCode",{parentName:"p"},"tags"),", este ultimo mas que nada nos ayuda a organizar todas estas rutas en la documentaci\xf3n generada a partir de ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"}," FastAPI ")),", para saber mas de esto visita ",(0,a.kt)("a",{parentName:"p",href:"https://fastapi.tiangolo.com/tutorial/metadata/"},(0,a.kt)("inlineCode",{parentName:"a"},"FastAPI/Metadata"))),(0,a.kt)("h2",{id:"enrutador"},"Enrutador"),(0,a.kt)("p",null,"Bien para poder usar este decoradores lo traemos de una clase llamada ",(0,a.kt)("inlineCode",{parentName:"p"},"APIRouter"),", el cual es un ",(0,a.kt)("em",{parentName:"p"},"Enrutador")," y esta trae varias funciones decoradoras para poder hacer uso de ellas, que son las cuatro principales, de los verbos que ya mencionamos ",(0,a.kt)("inlineCode",{parentName:"p"},"GET"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"PUT")," y  ",(0,a.kt)("inlineCode",{parentName:"p"},"DELETE")," todo esto a partir del objeto  generado de APIRouter."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Ahora una vez generado tu enrutador no olvides agregarlo al app principal, que tendr\xe1 nuestro enrutador principal con un prefijo o prefix como ver\xe1s a continuaci\xf3n.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"src/app.py")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'app = FastAPI()\napp.include_router(chapter_routes, prefix="/capitulo")\n')))}l.isMDXComponent=!0}}]);