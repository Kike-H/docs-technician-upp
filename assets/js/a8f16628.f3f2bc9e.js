"use strict";(self.webpackChunkdocs_technician_upp=self.webpackChunkdocs_technician_upp||[]).push([[117],{9613:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var r=a(9496);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),i=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=i(a),d=n,b=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return a?r.createElement(b,s(s({ref:t},u),{},{components:a})):r.createElement(b,s({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var i=2;i<o;i++)s[i]=a[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7065:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var r=a(4250),n=(a(9496),a(9613));const o={sidebar_position:3},s="Schemas",l={unversionedId:"project-structure/schemas",id:"project-structure/schemas",title:"Schemas",description:"Schemas  y su relaci\xf3n con la base de datos",source:"@site/backend/project-structure/3-schemas.md",sourceDirName:"project-structure",slug:"/project-structure/schemas",permalink:"/docs-technician-upp/docs/project-structure/schemas",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/backend/project-structure/3-schemas.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Base de Datos",permalink:"/docs-technician-upp/docs/project-structure/database"},next:{title:"Models",permalink:"/docs-technician-upp/docs/project-structure/models"}},c={},i=[{value:"C\xf3digo",id:"c\xf3digo",level:2},{value:"Importaciones",id:"importaciones",level:2},{value:"Creaci\xf3n",id:"creaci\xf3n",level:2},{value:"Tabla",id:"tabla",level:2}],u={toc:i};function p(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"schemas"},"Schemas"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"}," Schemas "))," y su relaci\xf3n con la base de datos"),(0,n.kt)("p",null,"Los schemas son una parte muy importante del proyecto ya que en ellos se crean las estructuras de las tablas de la base de datos, estas siguen la siguiente estructura."),(0,n.kt)("h2",{id:"c\xf3digo"},"C\xf3digo"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from sqlalchemy import Table, Column\nfrom sqlalchemy.sql.sqltypes import Integer, String\nfrom sqlalchemy.dialects.mysql import TINYINT\nfrom src.config.database import meta, engine\n\nchapter = Table(\n    \"capitulo\",\n    meta,\n    Column('idCapitulo', Integer, primary_key=True),\n    Column('numero', Integer, nullable=False),\n    Column('nombre', String(255), nullable=False),\n    Column('tipoGasto', String(255), nullable=False),\n    Column('nombreGasto', String(255), nullable=False),\n    Column('descripcion', String(255), nullable=False),\n    Column('status', TINYINT, nullable=False),\n)\n\nmeta.create_all(engine)\n")),(0,n.kt)("h2",{id:"importaciones"},"Importaciones"),(0,n.kt)("p",null,"Lo primero que tenemos son todas las importacione necesarias del archivo."),(0,n.kt)("h2",{id:"creaci\xf3n"},"Creaci\xf3n"),(0,n.kt)("p",null,"A Partir de la clase tabla se genera una variable, esta suele llamarse como el nombre de la tabla. Primero y como un string se pasa el nombre de la tabla y despu\xe9s en esta clase se definen las columnas de las tablas as\xed como los atributos de las mismas,tambi\xe9n se le pasa el meta que es la informaci\xf3n de conexi\xf3n de la base de datos a la cual estamos accediendo."),(0,n.kt)("p",null,"Por \xfaltimo tenemos el ",(0,n.kt)("inlineCode",{parentName:"p"},"meta.create_all(engine)")," que nos genera toda la sentencia SQL para crear la tabla anteriormente descrita y lo ejecuta teniendo como resultado la siguiente tabla en nuestra base de datos:"),(0,n.kt)("h2",{id:"tabla"},"Tabla"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Table",src:a(6734).Z,title:"MarineGEO logo",width:"730",height:"763"})))}p.isMDXComponent=!0},6734:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/table-c23959dd72b918325806078f20ebb306.png"}}]);