"use strict";(self.webpackChunkdocs_technician_upp=self.webpackChunkdocs_technician_upp||[]).push([[488],{9613:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5194:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(4250),a=(r(9496),r(9613));const o={sidebar_position:4},s="Models",i={unversionedId:"project-structure/models",id:"project-structure/models",title:"Models",description:"Los modelos y los  mappers",source:"@site/backend/project-structure/4-models.md",sourceDirName:"project-structure",slug:"/project-structure/models",permalink:"/docs-technician-upp/docs/project-structure/models",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/backend/project-structure/4-models.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Schemas",permalink:"/docs-technician-upp/docs/project-structure/schemas"},next:{title:"API Key",permalink:"/docs-technician-upp/docs/project-structure/apikey"}},c={},l=[{value:"C\xf3digo",id:"c\xf3digo",level:2},{value:"Creaci\xf3n",id:"creaci\xf3n",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"models"},"Models"),(0,a.kt)("p",null,"Los modelos y los ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"}," mappers "))),(0,a.kt)("p",null,"Los modelos son los encargados de mapear la informaci\xf3n obtenida de la base de datos, as\xed como de mapearla para su procesamiento y posterior inserci\xf3n a la base de datos."),(0,a.kt)("h2",{id:"c\xf3digo"},"C\xf3digo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from typing import List, Optional\nfrom pydantic import BaseModel\nfrom src.models.status import StatusModel\n\n\nclass ChapterBase(BaseModel):\n    idCapitulo: Optional[int]\n\n\nclass ChapterIn(StatusModel, ChapterBase):\n    numero: int\n    nombre: str\n    tipoGasto: str\n    nombreGasto: str\n    descripcion: str\n\n\nclass ChapterOut(BaseModel):\n    values: List[ChapterIn] = [ChapterIn(**example)]\n    num: int = 0\n\n    def __init__(self, values: List[ChapterIn], **kwargs):\n        super().__init__(**kwargs)\n        self.values = values\n        self.num = len(values)\n")),(0,a.kt)("h2",{id:"creaci\xf3n"},"Creaci\xf3n"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Tome en cuenta que estos modelos heredan de la clase Base Model, por lo que al usted querer generar un inicializador, deber\xe1 hacer uso del ",(0,a.kt)("inlineCode",{parentName:"p"},"super().__init__(**kwargs)"))),(0,a.kt)("p",null,"Como vemos aqu\xed tenemos las clases que definen como ser\xe1n los objetos que demos utilizar, como la clase ",(0,a.kt)("inlineCode",{parentName:"p"},"In")," es la que nos mapea de ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"}," Json "))," a la entidad de la base de datos para su posterior inserci\xf3n. O la ",(0,a.kt)("inlineCode",{parentName:"p"},"Out")," que es la que nos mapea de la entidad al modelo correspondiente para retornarlos como  ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"}," Json "))," en las posibles rutas de este apartado."))}u.isMDXComponent=!0}}]);